AWSTemplateFormatVersion: "2010-09-09"

Description: Creates an ECS Cluster for running a development instance of Grouparoo

Parameters:
  VpcId:
    Type: String
    Description: VPC for Cluster
    Default: vpc-814f29ea
  VpcSubnetA:
    Type: String
    Description: First subnet for the Grouparoo service
    Default: subnet-4049c72b
  VpcSubnetB:
    Type: String
    Description: Second subnet for the Grouparoo service
    Default: subnet-a44783d9
  GrouparooClusterName:
    Type: String
    Description: Name for the Grouparoo ECS Cluster
    Default: grouparoo-cloudformation
  GrouparooServiceName:
    Type: String
    Description: Name for the Grouparoo ECS Service
    Default: grouparoo-cloudformation
  GrouparooRepositoryName:
    Type: String
    Description: Name for the Grouparoo ECR Repository
    Default: grouparoo-cloudformation
  MailchimpAPIKeySSMParameter:
    Type: String
    Default: /grouparoo/mailchimp/api-key
  MailchimpListIdSSMParameter:
    Type: String
    Default: /grouparoo/mailchimp/list-id
  SnowflakeAccountSSMParameter:
    Type: String
    Default: /snowflake/account
  SnowflakeUsernameSSMParameter:
    Type: String
    Default: /snowflake/username
  SnowflakePasswordSSMParameter:
    Type: String
    Default: /snowflake/password

Resources:
  
  GrouparooEcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      CapacityProviders:
        - FARGATE
      ClusterName: !Ref GrouparooClusterName
  
  GrouparooEcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref GrouparooEcsCluster
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref GrouparooSecurityGroup
          Subnets:
            - !Ref VpcSubnetA
            - !Ref VpcSubnetB
      ServiceName: !Ref GrouparooServiceName
      TaskDefinition: !Ref GrouparooTaskDefinition
  
  GrouparooEcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref GrouparooRepositoryName
  
  GrouparooTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        -
          Secrets:
            -
              Name: MAILCHIMP_API_KEY
              ValueFrom: !Ref MailchimpAPIKeySSMParameter
            -
              Name: MAILCHIMP_LIST_ID
              ValueFrom: !Ref MailchimpListIdSSMParameter
            -
              Name: SNOWFLAKE_ACCOUNT
              ValueFrom: !Ref SnowflakeAccountSSMParameter
            -
              Name: SNOWFLAKE_USERNAME
              ValueFrom: !Ref SnowflakeUsernameSSMParameter
            -
              Name: SNOWFLAKE_PASSWORD
              ValueFrom: !Ref SnowflakePasswordSSMParameter
          Image: !Join [ "", [!GetAtt GrouparooEcrRepository.RepositoryUri, ":latest" ] ]
          Name: grouparoo
      Cpu: '512'
      Memory: '1024'
      ExecutionRoleArn: !Ref GrouparooExecutionRole 
      NetworkMode: awsvpc
  
  GrouparooExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ssm-params
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/grouparoo/*"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/snowflake/*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  
  GrouparooSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Grouparoo Security Group
      SecurityGroupEgress:
        IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 3000
        ToPort: 3000
        CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId


#  AirbyteEC2SG:
#     Type: AWS::EC2::SecurityGroup
#     Properties:
#       GroupDescription: Airbyte EC2 Security Group
#       SecurityGroupIngress:
#         # - IpProtocol: tcp
#         #   FromPort: 22
#         #   ToPort: 22
#         #   CidrIp: !Ref SSHLocation
#         - IpProtocol: tcp
#           FromPort: 80
#           ToPort: 80
#           SourceSecurityGroupID: !GetAtt AirbyteELBSG.GroupId
#     DependsOn: AirbyteELBSG